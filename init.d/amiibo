#!/bin/sh

### BEGIN INIT INFO
# Provides:	  amiibo
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the amiibo web server
# Description:       starts the amiibo web server
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/home/ubuntu/git/nfc/bin/www
NAME=amiibo
DESC=amiibo web server

STOP_SCHEDULE="${STOP_SCHEDULE:-QUIT/5/TERM/5/KILL/5}"

test -x $DAEMON || exit 0

start_amiibo() {
	# Start the daemon/service
	#
	# Returns:
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
  cd /home/ubuntu/git/nfc && nohup npm start &
  cd -
}

stop_amiibo() {
	# Stops the daemon/service
	#
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
  echo "Not implemented"
}

reload_amiibo() {
	# Function that sends a SIGHUP to the daemon/service
}


upgrade_amiibo() {
	# Online upgrade nginx executable
	# http://nginx.org/en/docs/control.html
	#
	# Return
	#   0 if nginx has been successfully upgraded
	#   1 if nginx is not running
	#   2 if the pid files were not created on time
	#   3 if the old master could not be killed
  cd /home/ubuntu/git/nfc && git pull ; cd -
}

case "$1" in
	start)
		echo "Starting $DESC" "$NAME"
		start_amiibo
    echo "Done"
		;;
	stop)
		echo "Stopping $DESC" "$NAME"
		stop_nginx
		;;
	upgrade)
		log_daemon_msg "Upgrading binary" "$NAME"
		upgrade_nginx
		log_end_msg $?
		;;
	*)
		echo "Usage: $NAME {start|stop|upgrade}" >&2
		exit 3
		;;
esac
